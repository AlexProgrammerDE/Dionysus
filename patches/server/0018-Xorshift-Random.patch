From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Sat, 11 Dec 2021 23:21:41 -0600
Subject: [PATCH] Xorshift Random

Use xorshift random where we can.

diff --git a/pom.xml b/pom.xml
index 9cf84383915ecab3c67fd8037b6e30748613d2b7..54b2e136f8a04b20d84c55d5c419c48fa39a775a 100644
--- a/pom.xml
+++ b/pom.xml
@@ -113,6 +113,18 @@
             <scope>runtime</scope>
         </dependency>
 
+        <dependency>
+            <groupId>it.unimi.dsi</groupId>
+            <artifactId>dsiutils</artifactId>
+            <version>2.6.17</version>
+        </dependency>
+
+        <dependency>
+            <groupId>it.unimi.dsi</groupId>
+            <artifactId>fastutil</artifactId>
+            <version>8.5.6</version>
+        </dependency>
+
         <!-- testing -->
         <dependency>
             <groupId>junit</groupId>
@@ -225,6 +237,7 @@
                                     <excludes>
                                         <exclude>io/netty/**</exclude>
                                         <exclude>org/apache/logging/log4j/**</exclude>
+                                        <exclude>it/unimi/dsi/fastutil/**</exclude>
                                     </excludes>
                                 </filter>
                             </filters>
diff --git a/src/main/java/com/destroystokyo/paper/loottable/CraftLootableInventoryData.java b/src/main/java/com/destroystokyo/paper/loottable/CraftLootableInventoryData.java
index be4b53b4111259382e425a87719d75adf93f28b5..1dddc9f912c0545fef7a06e2f72463153fe830c0 100644
--- a/src/main/java/com/destroystokyo/paper/loottable/CraftLootableInventoryData.java
+++ b/src/main/java/com/destroystokyo/paper/loottable/CraftLootableInventoryData.java
@@ -1,6 +1,7 @@
 package com.destroystokyo.paper.loottable;
 
 import com.destroystokyo.paper.PaperWorldConfig;
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import net.minecraft.server.*;
 import org.bukkit.entity.Player;
 
@@ -12,7 +13,7 @@ import java.util.UUID;
 
 public class CraftLootableInventoryData {
 
-    private static final Random RANDOM = new Random();
+    private static final Random RANDOM = new XoShiRo256PlusPlusRandom();
 
     private long lastFill = -1;
     private long nextRefill = -1;
diff --git a/src/main/java/net/minecraft/server/Block.java b/src/main/java/net/minecraft/server/Block.java
index a715edb53fe883d224bc1feb03da5c74fa7eb61c..7a07774d744b2bab609b2c9b742915d46855c4da 100644
--- a/src/main/java/net/minecraft/server/Block.java
+++ b/src/main/java/net/minecraft/server/Block.java
@@ -2,6 +2,9 @@ package net.minecraft.server;
 
 import com.google.common.collect.Sets;
 import com.google.common.collect.UnmodifiableIterator;
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
+import org.apache.logging.log4j.LogManager;
+
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -44,6 +47,29 @@ public class Block {
         return timing;
     }
     // Paper end
+    // Dionysus start
+    public static Random SHARED_RANDOM = new XoShiRo256PlusPlusRandom() {
+        private boolean locked = false;
+        @Override
+        public synchronized void setSeed(long seed) {
+            if (locked) {
+                LogManager.getLogger().debug("Ignoring setSeed on Block.SHARED_RANDOM", new Throwable());
+            } else {
+                super.setSeed(seed);
+                locked = true;
+            }
+        }
+
+        @Override
+        public double nextDouble() {
+            return this.nextDoubleFast();
+        }
+    };
+    protected Random random = SHARED_RANDOM;
+    public Random getRandom() {
+        return this.random;
+    }
+    // Dionysus end
 
     public static int getId(Block block) {
         return Block.REGISTRY.a(block); // CraftBukkit - decompile error
diff --git a/src/main/java/net/minecraft/server/BlockDispenser.java b/src/main/java/net/minecraft/server/BlockDispenser.java
index 3e758a81a1de408ed98c042f55fa2b3871877cc0..f7b031f0ad398220499d307276e2465c116f9f03 100644
--- a/src/main/java/net/minecraft/server/BlockDispenser.java
+++ b/src/main/java/net/minecraft/server/BlockDispenser.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
+
 import java.util.Random;
 
 public class BlockDispenser extends BlockTileEntity {
@@ -7,7 +9,7 @@ public class BlockDispenser extends BlockTileEntity {
     public static final BlockStateDirection FACING = BlockDirectional.FACING;
     public static final BlockStateBoolean TRIGGERED = BlockStateBoolean.of("triggered");
     public static final RegistryDefault<Item, IDispenseBehavior> REGISTRY = new RegistryDefault(new DispenseBehaviorItem());
-    protected Random d = new Random();
+    //protected Random d = new XoShiRo256PlusPlusRandom();
     public static boolean eventFired = false; // CraftBukkit
 
     protected BlockDispenser() {
diff --git a/src/main/java/net/minecraft/server/BlockDragonEgg.java b/src/main/java/net/minecraft/server/BlockDragonEgg.java
index fd53f98d354cc9be2b97a6fd30e4f4858cdd5273..5ea339e12b5c1d834e691068432f0e2609b41dea 100644
--- a/src/main/java/net/minecraft/server/BlockDragonEgg.java
+++ b/src/main/java/net/minecraft/server/BlockDragonEgg.java
@@ -81,13 +81,13 @@ public class BlockDragonEgg extends Block {
                     // CraftBukkit end
                     if (world.isClientSide) {
                         for (int j = 0; j < 128; ++j) {
-                            double d0 = world.random.nextDouble();
-                            float f = (world.random.nextFloat() - 0.5F) * 0.2F;
-                            float f1 = (world.random.nextFloat() - 0.5F) * 0.2F;
-                            float f2 = (world.random.nextFloat() - 0.5F) * 0.2F;
-                            double d1 = (double) blockposition1.getX() + (double) (blockposition.getX() - blockposition1.getX()) * d0 + (world.random.nextDouble() - 0.5D) + 0.5D;
-                            double d2 = (double) blockposition1.getY() + (double) (blockposition.getY() - blockposition1.getY()) * d0 + world.random.nextDouble() - 0.5D;
-                            double d3 = (double) blockposition1.getZ() + (double) (blockposition.getZ() - blockposition1.getZ()) * d0 + (world.random.nextDouble() - 0.5D) + 0.5D;
+                            double d0 = this.random.nextDouble();
+                            float f = (this.random.nextFloat() - 0.5F) * 0.2F;
+                            float f1 = (this.random.nextFloat() - 0.5F) * 0.2F;
+                            float f2 = (this.random.nextFloat() - 0.5F) * 0.2F;
+                            double d1 = (double) blockposition1.getX() + (double) (blockposition.getX() - blockposition1.getX()) * d0 + (this.random.nextDouble() - 0.5D) + 0.5D;
+                            double d2 = (double) blockposition1.getY() + (double) (blockposition.getY() - blockposition1.getY()) * d0 + this.random.nextDouble() - 0.5D;
+                            double d3 = (double) blockposition1.getZ() + (double) (blockposition.getZ() - blockposition1.getZ()) * d0 + (this.random.nextDouble() - 0.5D) + 0.5D;
 
                             world.addParticle(EnumParticle.PORTAL, d1, d2, d3, f, f1, f2);
                         }
diff --git a/src/main/java/net/minecraft/server/BlockPumpkin.java b/src/main/java/net/minecraft/server/BlockPumpkin.java
index 595032a769dac8fce9715a4586c0379695328924..e4cfa2282cb6e2098c3b209e8af2105978cc9f6e 100644
--- a/src/main/java/net/minecraft/server/BlockPumpkin.java
+++ b/src/main/java/net/minecraft/server/BlockPumpkin.java
@@ -76,7 +76,7 @@ public class BlockPumpkin extends BlockFacingHorizontal {
             }
 
             for (j = 0; j < 120; ++j) {
-                world.addParticle(EnumParticle.SNOW_SHOVEL, (double) blockposition1.getX() + world.random.nextDouble(), (double) blockposition1.getY() + world.random.nextDouble() * 2.5D, (double) blockposition1.getZ() + world.random.nextDouble(), 0.0D, 0.0D, 0.0D);
+                world.addParticle(EnumParticle.SNOW_SHOVEL, (double) blockposition1.getX() + this.random.nextDouble(), (double) blockposition1.getY() + this.random.nextDouble() * 2.5D, (double) blockposition1.getZ() + this.random.nextDouble(), 0.0D, 0.0D, 0.0D);
             }
 
             for (j = 0; j < this.getDetectorSnowGolem().b(); ++j) {
@@ -114,7 +114,7 @@ public class BlockPumpkin extends BlockFacingHorizontal {
                 }
 
                 for (j = 0; j < 120; ++j) {
-                    world.addParticle(EnumParticle.SNOWBALL, (double) blockposition2.getX() + world.random.nextDouble(), (double) blockposition2.getY() + world.random.nextDouble() * 3.9D, (double) blockposition2.getZ() + world.random.nextDouble(), 0.0D, 0.0D, 0.0D);
+                    world.addParticle(EnumParticle.SNOWBALL, (double) blockposition2.getX() + this.random.nextDouble(), (double) blockposition2.getY() + this.random.nextDouble() * 3.9D, (double) blockposition2.getZ() + this.random.nextDouble(), 0.0D, 0.0D, 0.0D);
                 }
 
                 for (j = 0; j < this.getDetectorIronGolem().c(); ++j) {
diff --git a/src/main/java/net/minecraft/server/BlockRedstoneTorch.java b/src/main/java/net/minecraft/server/BlockRedstoneTorch.java
index 7ace5c940ebe7bf1ccce39ad4b521672d4e2b278..142e7c66175170f32b81106ed7fd44bb1e072d88 100644
--- a/src/main/java/net/minecraft/server/BlockRedstoneTorch.java
+++ b/src/main/java/net/minecraft/server/BlockRedstoneTorch.java
@@ -130,9 +130,9 @@ public class BlockRedstoneTorch extends BlockTorch {
                     world.a(null, blockposition, SoundEffects.gm, SoundCategory.BLOCKS, 0.5F, 2.6F + (world.random.nextFloat() - world.random.nextFloat()) * 0.8F);
 
                     for (int i = 0; i < 5; ++i) {
-                        double d0 = (double) blockposition.getX() + random.nextDouble() * 0.6D + 0.2D;
-                        double d1 = (double) blockposition.getY() + random.nextDouble() * 0.6D + 0.2D;
-                        double d2 = (double) blockposition.getZ() + random.nextDouble() * 0.6D + 0.2D;
+                        double d0 = (double) blockposition.getX() + this.random.nextDouble() * 0.6D + 0.2D;
+                        double d1 = (double) blockposition.getY() + this.random.nextDouble() * 0.6D + 0.2D;
+                        double d2 = (double) blockposition.getZ() + this.random.nextDouble() * 0.6D + 0.2D;
 
                         world.addParticle(EnumParticle.SMOKE_NORMAL, d0, d1, d2, 0.0D, 0.0D, 0.0D);
                     }
diff --git a/src/main/java/net/minecraft/server/BlockSkull.java b/src/main/java/net/minecraft/server/BlockSkull.java
index 88fdc062a0d5aa14476fb7f686f8079dfc551d2f..28d410ea8e7346e131d6a8aaff9c306c8b8a6f98 100644
--- a/src/main/java/net/minecraft/server/BlockSkull.java
+++ b/src/main/java/net/minecraft/server/BlockSkull.java
@@ -212,7 +212,7 @@ public class BlockSkull extends BlockTileEntity {
                 int k;
 
                 for (k = 0; k < 120; ++k) {
-                    world.addParticle(EnumParticle.SNOWBALL, (double) blockposition1.getX() + world.random.nextDouble(), (double) (blockposition1.getY() - 2) + world.random.nextDouble() * 3.9D, (double) blockposition1.getZ() + world.random.nextDouble(), 0.0D, 0.0D, 0.0D);
+                    world.addParticle(EnumParticle.SNOWBALL, (double) blockposition1.getX() + this.random.nextDouble(), (double) (blockposition1.getY() - 2) + this.random.nextDouble() * 3.9D, (double) blockposition1.getZ() + this.random.nextDouble(), 0.0D, 0.0D, 0.0D);
                 }
 
                 for (k = 0; k < shapedetector.c(); ++k) {
diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
index b007f7c29bdfb86ac75920f288759ecf70a5c802..8f2f7abf361068dea009ef9687c5cbabeb3f782a 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
@@ -45,14 +45,14 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
         }
 
         EntityItem entityitem = new EntityItem(world, d0, d1, d2, itemstack);
-        double d3 = world.random.nextDouble() * 0.1D + 0.2D;
+        double d3 = entityitem.random.nextDouble() * 0.1D + 0.2D;
 
         entityitem.motX = (double) enumdirection.getAdjacentX() * d3;
         entityitem.motY = 0.20000000298023224D;
         entityitem.motZ = (double) enumdirection.getAdjacentZ() * d3;
-        entityitem.motX += world.random.nextGaussian() * 0.007499999832361937D * (double) i;
-        entityitem.motY += world.random.nextGaussian() * 0.007499999832361937D * (double) i;
-        entityitem.motZ += world.random.nextGaussian() * 0.007499999832361937D * (double) i;
+        entityitem.motX += entityitem.random.nextGaussian() * 0.007499999832361937D * (double) i;
+        entityitem.motY += entityitem.random.nextGaussian() * 0.007499999832361937D * (double) i;
+        entityitem.motZ += entityitem.random.nextGaussian() * 0.007499999832361937D * (double) i;
 
         // CraftBukkit start
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 3034756a2f3032cb6fe44512e6d168b47bfd7342..61c91557a7ea66c43035914581542416bd5ad4ca 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -13,6 +13,8 @@ import java.util.Random;
 import java.util.Set;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -47,7 +49,7 @@ public abstract class Entity implements ICommandListener, KeyedObject { // Paper
     // CraftBukkit start
     private static final int CURRENT_LEVEL = 2;
     // Paper start
-    public static Random SHARED_RANDOM = new Random() {
+    public static Random SHARED_RANDOM = new XoShiRo256PlusPlusRandom() {
         private boolean locked = false;
         @Override
         public synchronized void setSeed(long seed) {
@@ -58,6 +60,11 @@ public abstract class Entity implements ICommandListener, KeyedObject { // Paper
                 locked = true;
             }
         }
+
+        @Override
+        public double nextDouble() {
+            return this.nextDoubleFast();
+        }
     };
     List<Entity> entitySlice = null;
     // Paper end
diff --git a/src/main/java/net/minecraft/server/EntityEnderman.java b/src/main/java/net/minecraft/server/EntityEnderman.java
index 2671af33e518b3470f507ec439e57533c2165bb6..486b28e7d0e65b969d31f2525305a71bde4b700d 100644
--- a/src/main/java/net/minecraft/server/EntityEnderman.java
+++ b/src/main/java/net/minecraft/server/EntityEnderman.java
@@ -334,7 +334,7 @@ public class EntityEnderman extends EntityMonster {
         }
 
         public void e() {
-            Random random = this.enderman.getRandom();
+            Random random = this.enderman.random;
             World world = this.enderman.world;
             int i = MathHelper.floor(this.enderman.locX - 2.0D + random.nextDouble() * 4.0D);
             int j = MathHelper.floor(this.enderman.locY + random.nextDouble() * 3.0D);
@@ -370,7 +370,7 @@ public class EntityEnderman extends EntityMonster {
         }
 
         public void e() {
-            Random random = this.a.getRandom();
+            Random random = this.a.random;
             World world = this.a.world;
             int i = MathHelper.floor(this.a.locX - 1.0D + random.nextDouble() * 2.0D);
             int j = MathHelper.floor(this.a.locY + random.nextDouble() * 2.0D);
diff --git a/src/main/java/net/minecraft/server/EntityEvokerFangs.java b/src/main/java/net/minecraft/server/EntityEvokerFangs.java
index 6feba35d515c9bfae218e0a3ef114b2f10c4084f..26837bd20c600c4a2ef6ff6c16fba5e31c26dd3c 100644
--- a/src/main/java/net/minecraft/server/EntityEvokerFangs.java
+++ b/src/main/java/net/minecraft/server/EntityEvokerFangs.java
@@ -69,7 +69,7 @@ public class EntityEvokerFangs extends Entity {
                 if (this.c == 14) {
                     for (int i = 0; i < 12; ++i) {
                         double d0 = this.locX + (this.random.nextDouble() * 2.0D - 1.0D) * (double) this.width * 0.5D;
-                        double d1 = this.locY + 0.05D + this.random.nextDouble() * 1.0D;
+                        double d1 = this.locY + 0.05D + this.random.nextDouble();
                         double d2 = this.locZ + (this.random.nextDouble() * 2.0D - 1.0D) * (double) this.width * 0.5D;
                         double d3 = (this.random.nextDouble() * 2.0D - 1.0D) * 0.3D;
                         double d4 = 0.3D + this.random.nextDouble() * 0.3D;
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index d8753dffa478a4050434dfc326f646b6e9573b29..1375742e98a3f2b381e3c969d79882e092409df7 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2546,7 +2546,6 @@ public abstract class EntityLiving extends Entity {
         boolean flag = false;
         BlockPosition blockposition = new BlockPosition(this);
         World world = this.world;
-        Random random = this.getRandom();
         boolean flag1;
 
         if (world.isLoaded(blockposition)) {
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index 589da0e5a34565cf03bb4b8a5ded5b09ee74925b..4f3045003ec14244823a9ffb964755f2a98df49d 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -3,6 +3,7 @@ package net.minecraft.server;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import org.bukkit.Location;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.block.BlockExplodeEvent;
@@ -10,18 +11,12 @@ import org.bukkit.event.entity.EntityExplodeEvent;
 
 import javax.annotation.Nullable;
 import java.util.*;
-import java.util.function.Predicate;
-
-// CraftBukkit start
-// CraftBukkit end
-// Dionysus start
-// Dionysus end
 
 public class Explosion {
 
     private final boolean a; private boolean explodeAirBlocks() { return a; } // Dionysus - OBFHELPER
     private final boolean b;
-    private final Random c = new Random();
+    private final Random c = new XoShiRo256PlusPlusRandom();
     private final World world;
     private final double posX;
     private final double posY;
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index de456592d3d6acfc2832591d621cabdd1888930e..306d49a73a7d214d5b82ee4eb90fca2f5c9789bf 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -782,7 +782,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
                 agameprofile[k] = this.v.v().get(j + k).getProfile();
             }
 
-            Collections.shuffle(Arrays.asList(agameprofile));
+            Collections.shuffle(Arrays.asList(agameprofile), this.r);
             this.q.b().a(agameprofile);
         }
 
diff --git a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
index b52500355a456985b66a67cabdd7750240a42da9..c74f1e20383e53a013811abade2ddbe31570d08d 100644
--- a/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
+++ b/src/main/java/net/minecraft/server/MobSpawnerAbstract.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 
 import java.util.Iterator;
 import java.util.List;
@@ -22,6 +23,10 @@ public abstract class MobSpawnerAbstract {
     public int spawnRange = 4; // CraftBukkit private -> public
     private int tickDelay = 0; // Paper
 
+    // Dionysus start
+    private XoShiRo256PlusPlusRandom random = new XoShiRo256PlusPlusRandom();
+    // Dionysus end
+
     public MobSpawnerAbstract() {}
 
     @Nullable
@@ -85,9 +90,9 @@ public abstract class MobSpawnerAbstract {
                     NBTTagList nbttaglist = nbttagcompound.getList("Pos", 6);
                     World world = this.a();
                     int j = nbttaglist.size();
-                    double d3 = j >= 1 ? nbttaglist.f(0) : (double) blockposition.getX() + (world.random.nextDouble() - world.random.nextDouble()) * (double) this.spawnRange + 0.5D;
-                    double d4 = j >= 2 ? nbttaglist.f(1) : (double) (blockposition.getY() + world.random.nextInt(3) - 1);
-                    double d5 = j >= 3 ? nbttaglist.f(2) : (double) blockposition.getZ() + (world.random.nextDouble() - world.random.nextDouble()) * (double) this.spawnRange + 0.5D;
+                    double d3 = j >= 1 ? nbttaglist.f(0) : (double) blockposition.getX() + (random.nextDouble() - random.nextDouble()) * (double) this.spawnRange + 0.5D;
+                    double d4 = j >= 2 ? nbttaglist.f(1) : (double) (blockposition.getY() + random.nextInt(3) - 1);
+                    double d5 = j >= 3 ? nbttaglist.f(2) : (double) blockposition.getZ() + (random.nextDouble() - random.nextDouble()) * (double) this.spawnRange + 0.5D;
                     // Paper start
                     if (this.getMobName() == null) {
                         return;
diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index b88e9083b3ab82d00924c6329ae247df1089d6ed..200805b6b595b43c35f6d9ef074632c4bcbbe639 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -23,11 +23,13 @@ import java.net.InetAddress;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class ServerConnection {
-
+    private static final XoShiRo256PlusPlusRandom RANDOM = new XoShiRo256PlusPlusRandom();
     private static final Logger e = LogManager.getLogger();
     public static final LazyInitVar<NioEventLoopGroup> a = new LazyInitVar() {
         protected NioEventLoopGroup a() {
@@ -136,7 +138,7 @@ public class ServerConnection {
             // This prevents players from 'gaming' the server, and strategically relogging to increase their position in the tick order
             if ( org.spigotmc.SpigotConfig.playerShuffle > 0 && MinecraftServer.currentTick % org.spigotmc.SpigotConfig.playerShuffle == 0 )
             {
-                Collections.shuffle( this.h );
+                Collections.shuffle(this.h, RANDOM);
             }
             // Spigot End
             Iterator iterator = this.h.iterator();
diff --git a/src/main/java/net/minecraft/server/TileEntityDispenser.java b/src/main/java/net/minecraft/server/TileEntityDispenser.java
index b366885888a3b1f17030e9d17e612b26e9ddc3f7..ce98bde259892adb320ff97b48a4e5c2b8971f1c 100644
--- a/src/main/java/net/minecraft/server/TileEntityDispenser.java
+++ b/src/main/java/net/minecraft/server/TileEntityDispenser.java
@@ -5,13 +5,14 @@ import java.util.Random;
 // CraftBukkit start
 import java.util.List;
 
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.entity.HumanEntity;
 // CraftBukkit end
 
 public class TileEntityDispenser extends TileEntityLootable {
 
-    private static final Random a = new Random();
+    private static final Random a = new XoShiRo256PlusPlusRandom();
     private NonNullList<ItemStack> items;
 
     // CraftBukkit start - add fields and methods
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 43e300409d167a13c67a941ef91c21b1335d8fe9..d95193b04025c52e8e178f35a869253e7274643e 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -20,6 +20,7 @@ import javax.annotation.Nullable;
 import com.google.common.collect.Maps;
 import java.util.HashMap; // Paper
 import java.util.Map;
+
 import org.bukkit.Bukkit;
 import org.bukkit.block.BlockState;
 import org.bukkit.craftbukkit.CraftServer;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 7ebb3714d711f8f0190cb2d4b5656a3295c3a74d..109b22da0b5a7d468850ccc943c5f8bcb910aff3 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -12,6 +12,7 @@ import java.util.Random;
 import java.util.Set;
 import java.util.UUID;
 
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import net.minecraft.server.*;
 
 import org.apache.commons.lang.Validate;
@@ -101,7 +102,7 @@ public class CraftWorld implements World {
     }
     // Paper end
 
-    private static final Random rand = new Random();
+    private static final Random rand = new XoShiRo256PlusPlusRandom();
 
     public CraftWorld(WorldServer world, ChunkGenerator gen, Environment env) {
         this.world = world;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
index d4fbe31d61048af1c6ea996783c384b1ae33e11b..4d735270b659c25a81b4179d6b2b0347398d1b39 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.entity;
 
+import it.unimi.dsi.util.XoShiRo256PlusPlusRandom;
 import net.minecraft.server.EntityFireworks;
 import net.minecraft.server.EntityLiving;
 import net.minecraft.server.ItemStack;
@@ -18,7 +19,7 @@ import java.util.UUID;
 
 public class CraftFirework extends CraftEntity implements Firework {
 
-    private final Random random = new Random();
+    private final Random random = new XoShiRo256PlusPlusRandom();
     private final CraftItemStack item;
 
     public CraftFirework(CraftServer server, EntityFireworks entity) {
